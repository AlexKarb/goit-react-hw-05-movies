{"version":3,"file":"static/js/95.3eedb48d.chunk.js","mappings":"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","sources":["components/Utils/SectionContainer.jsx","helpers/useFetchFilmInfo.js","components/CommentsList/CommentsList.styled.jsx","components/CommentsList/Commentary.jsx","components/CommentsList/CommentsList.jsx","pages/Reviews.jsx","helpers/createApiConfig.js","helpers/getErrorFromLength.js","service/FilmAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionContainer = styled.div`\n  width: 1000px;\n  padding: 20px 0;\n  font-size: 14px;\n  margin: 0 auto;\n  align-items: stretch;\n\n  ${prop => {\n    if (prop.display) {\n      return `display: ${prop.display}`;\n    }\n  }}\n`;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const useFetchFilmInfo = (functionForApi, prop = null) => {\n  const [data, setData] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus('loading');\n    functionForApi(prop)\n      .then(setData)\n      .catch(setError)\n      .finally(setStatus('resolve'));\n  }, [functionForApi, prop]);\n  return { data, status, error };\n};\n\nuseFetchFilmInfo.propTypes = {\n  functionForApi: PropTypes.func.isRequired,\n  prop: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { FaUserAlt } from 'react-icons/fa';\n\nexport const UserIcon = styled(FaUserAlt)`\n  margin: 0 15px;\n  width: 20px;\n  height: 20px;\n`;\n\nexport const Name = styled.p`\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n`;\n\nexport const Comment = styled.p`\n overflow-y: auto;\n    min-height: 50px;\n    max-height: 100px;\n        font-family: cursive;\n    color: #393939;\n}\n`;\n\nexport const Item = styled.li`\n  border: 1px solid;\n  padding: 20px 30px;\n  list-style: none;\n  margin-bottom: 30px;\n`;\n","import { UserIcon, Name, Item, Comment } from './CommentsList.styled';\nimport PropTypes from 'prop-types';\n\nexport const Commentary = ({ comment: { author, content } }) => {\n  return (\n    <Item>\n      <Name>\n        <UserIcon />\n        {author}\n      </Name>\n      <Comment>{content}</Comment>\n    </Item>\n  );\n};\n\nCommentary.propTypes = {\n  comment: PropTypes.shape({\n    author: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n  }),\n};\n","import { Commentary } from './Commentary';\n\nexport const CommentList = ({ comments }) =>\n  comments.length === 0 ? (\n    <div>Комментарии не найдены</div>\n  ) : (\n    <ul>\n      {comments.map(comment => (\n        <Commentary key={comment.id} comment={comment} />\n      ))}\n    </ul>\n  );\n","import { CommentList } from 'components/CommentsList/CommentsList';\nimport { SectionContainer } from 'components/Utils/SectionContainer';\nimport { useFetchFilmInfo } from 'helpers/useFetchFilmInfo';\nimport { useParams } from 'react-router-dom';\nimport { getRewiews } from 'service/FilmAPI';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const { data } = useFetchFilmInfo(getRewiews, movieId);\n\n  return (\n    <SectionContainer>\n      {data && <CommentList comments={data} />}\n    </SectionContainer>\n  );\n};\n","import PropTypes from 'prop-types';\n\nexport const createApiConfiguration = (obj = {}) => {\n  return Object.entries(obj)\n    .map(type => type.join('='))\n    .join('&');\n};\n\ncreateApiConfiguration.propTypes = {\n  obj: PropTypes.object,\n};\n","import { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nexport const getErrorFromLength = (data, text, config) => {\n  if (data?.length === 0) {\n    toast.error(text, { config });\n  }\n};\n\ngetErrorFromLength.propType = {\n  data: PropTypes.object.isRequired,\n  text: PropTypes.string.isRequired,\n  config: PropTypes.object,\n};\n","import axios from 'axios';\nimport { createApiConfiguration } from 'helpers/createApiConfig';\nimport { getErrorFromLength } from 'helpers/getErrorFromLength';\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst DATA_FETCH = {\n  api_key: '7b5bc84100d595f56fff5f28d8089376',\n  language: 'ru',\n};\nconst textError =\n  'К сожалению, поиск по сайту не дал никаких результатов. Попробуйте изменить или сократить Ваш запрос.';\nconst config = createApiConfiguration(DATA_FETCH);\n\nexport const getPublication = async (\n  request,\n  { return: whatNeedReturn, error = false } = {}\n) => {\n  const response = await axios.get(request);\n  const data = whatNeedReturn\n    ? await response.data[whatNeedReturn]\n    : await response.data;\n\n  if (error) getErrorFromLength(data, textError);\n  return data;\n};\n\nexport const getPublicationsDay = () =>\n  getPublication(`/trending/movie/day?${config}`, { return: 'results' });\n\nexport const getPublicationsSearch = async value =>\n  value\n    ? getPublication(`/search/movie?query=${value}&${config}`, {\n        return: 'results',\n        error: true,\n      })\n    : undefined;\n\nexport const getPublicationsOneFilm = async id =>\n  getPublication(`movie/${id}?${config}`);\n\nexport const getActors = async id =>\n  getPublication(`movie/${id}/credits?${config}`, { return: 'cast' });\n\nexport const getRewiews = async id =>\n  getPublication(`movie/${id}/reviews?api_key=${DATA_FETCH.api_key}`, {\n    return: 'results',\n  });\n\ngetPublication.propType = {\n  request: PropTypes.func.isRequired,\n};\n"],"names":["SectionContainer","styled","prop","display","useFetchFilmInfo","functionForApi","useState","data","setData","status","setStatus","error","setError","useEffect","then","catch","finally","propTypes","PropTypes","UserIcon","FaUserAlt","Name","Comment","Item","Commentary","comment","author","content","CommentList","comments","length","map","id","Reviews","movieId","useParams","getRewiews","S","createApiConfiguration","obj","Object","entries","type","join","getErrorFromLength","text","config","toast","propType","axios","DATA_FETCH","api_key","language","textError","getPublication","request","whatNeedReturn","return","response","getPublicationsDay","getPublicationsSearch","value","undefined","getPublicationsOneFilm","getActors"],"sourceRoot":""}