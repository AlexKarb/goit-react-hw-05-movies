{"version":3,"file":"static/js/754.ce594a6f.chunk.js","mappings":"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","sources":["components/FilmList/FIlmList.slyled.jsx","components/FilmList/FilmList.jsx","components/Utils/ImageApi.jsx","components/Utils/SectionContainer.jsx","components/Utils/Button.jsx","components/Utils/Spiner.jsx","components/Utils/Title.jsx","helpers/useFetchFilmInfo.js","components/SearchForm/SearchFom.styled.jsx","helpers/validationSchema.js","components/SearchForm/SearchForm.jsx","pages/MoviesPage.jsx","helpers/createApiConfig.js","helpers/getErrorFromLength.js","service/FilmAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: -20px;\n  justify-content: space-between;\n`;\n\nexport const Card = styled.li`\n  width: calc((100% / 4) - 10px);\n  margin-bottom: 20px;\n  background-color: #ececec;\n  list-style: none;\n  cursor: pointer;\n`;\n\nexport const PosterLink = styled(Link)`\n  display: block;\n  padding: 0px 20px;\n  height: 300px;\n  color: black;\n`;\n\nexport const Title = styled.p`\n  text-align: center;\n  padding: 20px 5px;\n`;\n","import { Card, List, Title, PosterLink } from './FIlmList.slyled';\nimport { Image } from 'components/Utils/ImageApi';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const FilmList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {films.map(({ id, title, poster_path }) => (\n        <Card key={id}>\n          <PosterLink to={`/movies/${id}`} state={{ from: location }}>\n            <Image src={poster_path} alt={title} />\n          </PosterLink>\n          <Title> {title}</Title>\n        </Card>\n      ))}\n    </List>\n  );\n};\n\nFilmList.propTypes = {\n  actors: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\nimport { IoMdImages } from 'react-icons/io';\nimport PropTypes from 'prop-types';\n\nconst Icon = styled(IoMdImages)`\n  width: 100%;\n  height: 100%;\n  ${prop => prop.styling}\n`;\n\nconst StyledImage = styled.img`\n  ${prop => prop.styling}\n`;\n\nexport const Image = ({ src, alt = 'poster', styling }) =>\n  src ? (\n    <StyledImage\n      styling={styling}\n      src={`https://image.tmdb.org/t/p/w500${src}`}\n      alt={alt}\n    />\n  ) : (\n    <Icon styling={styling} />\n  );\n\nImage.propTypes = {\n  src: PropTypes.string,\n  alt: PropTypes.string,\n  styling: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const SectionContainer = styled.div`\n  width: 1000px;\n  padding: 20px 0;\n  font-size: 14px;\n  margin: 0 auto;\n  align-items: stretch;\n\n  ${prop => {\n    if (prop.display) {\n      return `display: ${prop.display}`;\n    }\n  }}\n`;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Btn = styled.button`\n  background-color: transparent;\n  border: 1px solid #e7e7e7;\n  padding: 6px 20px;\n  min-width: 40px;\n  height: 35px;\n  border-radius: 3px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  cursor: pointer;\n  ${prop => prop.styling};\n\n  &:hover,\n  &:focus {\n    background-color: #eeeeee;\n  }\n`;\n\nexport const Button = ({\n  type = 'submit',\n  onClick,\n  text = null,\n  icon = false,\n  disabled = false,\n  children,\n  styling,\n}) => (\n  <Btn type={type} styling={styling} onClick={onClick} disabled={disabled}>\n    {text || icon || children}\n  </Btn>\n);\n\nButton.propTypes = {\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n  text: PropTypes.string,\n  icon: PropTypes.element,\n  disabled: PropTypes.bool,\n  children: PropTypes.node,\n  styling: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { Hearts } from 'react-loader-spinner';\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  width: 100px;\n`;\n\nexport const Spiner = () => (\n  <Wrapper>\n    <Hearts color=\"black\" />\n  </Wrapper>\n);\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Text = styled.h1`\n  padding: ${prop => prop.padding};\n`;\n\nexport const Title = ({ children, padding }) => (\n  <Text padding={padding}>{children}</Text>\n);\n\nTitle.propTypes = {\n  children: PropTypes.node,\n  padding: PropTypes.string,\n};\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const useFetchFilmInfo = (functionForApi, prop = null) => {\n  const [data, setData] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus('loading');\n    functionForApi(prop)\n      .then(setData)\n      .catch(setError)\n      .finally(setStatus('resolve'));\n  }, [functionForApi, prop]);\n  return { data, status, error };\n};\n\nuseFetchFilmInfo.propTypes = {\n  functionForApi: PropTypes.func.isRequired,\n  prop: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const SuperForm = styled(Form)`\n  padding: 40px;\n  display: flex;\n  width: 400px;\n  margin: 0 auto;\n`;\n\nexport const Input = styled(Field)`\n  height: 35px;\n  width: 350px;\n  padding: 2px 10px;\n  transition: all 500ms linear, transform 500ms ease-in-out;\n\n  &:focus ~ label {\n    transform: translateY(-35px);\n  }\n\n  &:not(: placeholder-shown) ~ label {\n    transform: translateY(-35px);\n  }\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n  margin-right: 17px;\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  top: 7px;\n  left: 20px;\n  color: grey;\n`;\n\nexport const Error = styled.div`\n  padding: 5px 20px;\n  color: red;\n  font-size: 12px;\n`;\n","import * as yup from 'yup';\n\nexport const schema = yup.object().shape({\n  query: yup\n    .string()\n    .trim()\n    .min(2, 'Минимально введите 2 символа')\n    .required('Обязательное поле'),\n});\n","import { RiSearchEyeLine } from 'react-icons/ri';\nimport { Formik, ErrorMessage } from 'formik';\nimport { Button } from 'components/Utils';\nimport { Wrapper, Label, Error, SuperForm, Input } from './SearchFom.styled';\nimport { schema } from 'helpers/validationSchema';\nimport PropTypes from 'prop-types';\n\nexport const SearchForm = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={{ query: '' }}\n      validationSchema={schema}\n      onSubmit={(values, { resetForm }) => {\n        onSubmit(values);\n        resetForm();\n      }}\n    >\n      {({ isSubmitting }) => (\n        <SuperForm>\n          <Wrapper>\n            <Input\n              type=\"text\"\n              name=\"query\"\n              id=\"query\"\n              aria-label=\"search form\"\n              autoComplete=\"off\"\n              placeholder=\" \"\n            />\n            <Label htmlFor=\"query\">Введите ваш запрос</Label>\n            <ErrorMessage name=\"query\" component={Error} />\n          </Wrapper>\n          <Button\n            icon={<RiSearchEyeLine size={20} />}\n            disabled={isSubmitting}\n          />\n        </SuperForm>\n      )}\n    </Formik>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useFetchFilmInfo } from 'helpers/useFetchFilmInfo';\nimport { getPublicationsSearch } from 'service/FilmAPI';\nimport { FilmList } from 'components/FilmList/FilmList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { SectionContainer, Spiner } from 'components/Utils';\n\nexport const MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const { data, status } = useFetchFilmInfo(\n    getPublicationsSearch,\n    searchParams.get('query')\n  );\n\n  return (\n    <SectionContainer>\n      <SearchForm onSubmit={setSearchParams} />\n      {status === 'loading' && <Spiner />}\n      {status === 'resolve' && data && <FilmList films={data} />}\n    </SectionContainer>\n  );\n};\n","import PropTypes from 'prop-types';\n\nexport const createApiConfiguration = (obj = {}) => {\n  return Object.entries(obj)\n    .map(type => type.join('='))\n    .join('&');\n};\n\ncreateApiConfiguration.propTypes = {\n  obj: PropTypes.object,\n};\n","import { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nexport const getErrorFromLength = (data, text, config) => {\n  if (data?.length === 0) {\n    toast.error(text, { config });\n  }\n};\n\ngetErrorFromLength.propType = {\n  data: PropTypes.object.isRequired,\n  text: PropTypes.string.isRequired,\n  config: PropTypes.object,\n};\n","import axios from 'axios';\nimport { createApiConfiguration } from 'helpers/createApiConfig';\nimport { getErrorFromLength } from 'helpers/getErrorFromLength';\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst DATA_FETCH = {\n  api_key: '7b5bc84100d595f56fff5f28d8089376',\n  language: 'ru',\n};\nconst textError =\n  'К сожалению, поиск по сайту не дал никаких результатов. Попробуйте изменить или сократить Ваш запрос.';\nconst config = createApiConfiguration(DATA_FETCH);\n\nexport const getPublication = async (\n  request,\n  { return: whatNeedReturn, error = false } = {}\n) => {\n  const response = await axios.get(request);\n  const data = whatNeedReturn\n    ? await response.data[whatNeedReturn]\n    : await response.data;\n\n  if (error) getErrorFromLength(data, textError);\n  return data;\n};\n\nexport const getPublicationsDay = () =>\n  getPublication(`/trending/movie/day?${config}`, { return: 'results' });\n\nexport const getPublicationsSearch = async value =>\n  value\n    ? getPublication(`/search/movie?query=${value}&${config}`, {\n        return: 'results',\n        error: true,\n      })\n    : undefined;\n\nexport const getPublicationsOneFilm = async id =>\n  getPublication(`movie/${id}?${config}`);\n\nexport const getActors = async id =>\n  getPublication(`movie/${id}/credits?${config}`, { return: 'cast' });\n\nexport const getRewiews = async id =>\n  getPublication(`movie/${id}/reviews?api_key=${DATA_FETCH.api_key}`, {\n    return: 'results',\n  });\n\ngetPublication.propType = {\n  request: PropTypes.func.isRequired,\n};\n"],"names":["List","styled","Card","PosterLink","Link","Title","FilmList","films","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","Icon","IoMdImages","prop","styling","StyledImage","Image","SectionContainer","display","Btn","Button","type","onClick","text","icon","disabled","children","Wrapper","Spiner","color","Text","padding","useFetchFilmInfo","functionForApi","useState","data","setData","status","setStatus","error","setError","useEffect","then","catch","finally","propTypes","PropTypes","SuperForm","Form","Input","Field","Label","Error","schema","yup","shape","query","trim","min","required","SearchForm","onSubmit","initialValues","validationSchema","values","resetForm","isSubmitting","name","autoComplete","placeholder","htmlFor","component","size","MoviesPage","useSearchParams","searchParams","setSearchParams","getPublicationsSearch","get","createApiConfiguration","obj","Object","entries","join","getErrorFromLength","config","length","toast","propType","axios","DATA_FETCH","api_key","language","textError","getPublication","request","whatNeedReturn","return","response","getPublicationsDay","value","undefined","getPublicationsOneFilm","getActors","getRewiews"],"sourceRoot":""}