{"version":3,"file":"static/js/788.a2938064.chunk.js","mappings":"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","sources":["components/Utils/ImageApi.jsx","components/Utils/SectionContainer.jsx","components/Utils/Button.jsx","components/Utils/Spiner.jsx","components/Utils/Title.jsx","helpers/useFetchFilmInfo.js","components/FilmDetails/FilmDetails.styled.jsx","components/FilmDetails/FilmDetails.jsx","components/NavMoreInfo/MoreInfoNavigation.styled.jsx","components/NavMoreInfo/MoreInfoNavigation.jsx","pages/MovieDetailsPage.jsx","helpers/createApiConfig.js","helpers/getErrorFromLength.js","service/FilmAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { IoMdImages } from 'react-icons/io';\nimport PropTypes from 'prop-types';\n\nconst Icon = styled(IoMdImages)`\n  width: 100%;\n  height: 100%;\n  ${prop => prop.styling}\n`;\n\nconst StyledImage = styled.img`\n  ${prop => prop.styling}\n`;\n\nexport const Image = ({ src, alt = 'poster', styling }) =>\n  src ? (\n    <StyledImage\n      styling={styling}\n      src={`https://image.tmdb.org/t/p/w500${src}`}\n      alt={alt}\n    />\n  ) : (\n    <Icon styling={styling} />\n  );\n\nImage.propTypes = {\n  src: PropTypes.string,\n  alt: PropTypes.string,\n  styling: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const SectionContainer = styled.div`\n  width: 1000px;\n  padding: 20px 0;\n  font-size: 14px;\n  margin: 0 auto;\n  align-items: stretch;\n\n  ${prop => {\n    if (prop.display) {\n      return `display: ${prop.display}`;\n    }\n  }}\n`;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Btn = styled.button`\n  background-color: transparent;\n  border: 1px solid #e7e7e7;\n  padding: 6px 20px;\n  min-width: 40px;\n  height: 35px;\n  border-radius: 3px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  cursor: pointer;\n  ${prop => prop.styling};\n\n  &:hover,\n  &:focus {\n    background-color: #eeeeee;\n  }\n`;\n\nexport const Button = ({\n  type = 'submit',\n  onClick,\n  text = null,\n  icon = false,\n  disabled = false,\n  children,\n  styling,\n}) => (\n  <Btn type={type} styling={styling} onClick={onClick} disabled={disabled}>\n    {text || icon || children}\n  </Btn>\n);\n\nButton.propTypes = {\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n  text: PropTypes.string,\n  icon: PropTypes.element,\n  disabled: PropTypes.bool,\n  children: PropTypes.node,\n  styling: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { Hearts } from 'react-loader-spinner';\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  width: 100px;\n`;\n\nexport const Spiner = () => (\n  <Wrapper>\n    <Hearts color=\"black\" />\n  </Wrapper>\n);\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Text = styled.h1`\n  padding: ${prop => prop.padding};\n`;\n\nexport const Title = ({ children, padding }) => (\n  <Text padding={padding}>{children}</Text>\n);\n\nTitle.propTypes = {\n  children: PropTypes.node,\n  padding: PropTypes.string,\n};\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const useFetchFilmInfo = (functionForApi, prop = null) => {\n  const [data, setData] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus('loading');\n    functionForApi(prop)\n      .then(setData)\n      .catch(setError)\n      .finally(setStatus('resolve'));\n  }, [functionForApi, prop]);\n  return { data, status, error };\n};\n\nuseFetchFilmInfo.propTypes = {\n  functionForApi: PropTypes.func.isRequired,\n  prop: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const FilmInfo = styled.div`\n  padding: 0px 30px;\n  display: flex;\n  flex-direction: column;\n  align-self: stretch;\n\n  & > * {\n    margin-bottom: 15px;\n  }\n`;\n","import { Image, Title, SectionContainer } from 'components/Utils';\nimport { FilmInfo } from './FilmDetails.styled';\nimport PropTypes from 'prop-types';\n\nexport const FilmDetails = ({ film }) => {\n  const {\n    poster_path,\n    title = 'Заголовок  отсутствует',\n    vote_average,\n    overview,\n    genres = ['информация отсутствует'],\n  } = film;\n  const percentageScore = `${vote_average * 10}%`;\n\n  return (\n    <SectionContainer display=\"flex\">\n      <Image\n        src={poster_path}\n        alt={title}\n        styling={'flex-shrink: 0; width: 170px; height: 100%;'}\n      />\n\n      <FilmInfo>\n        <Title> {title}</Title>\n        <p>\n          Оценка пользователя : {percentageScore ?? 'информация отсутствует'}\n        </p>\n        <h2>Обзор</h2>\n        <p>{overview || 'информация отсутствует'}</p>\n        <h2>Жанры</h2>\n        <p>{genres.map(({ name }) => name).join(' ')}</p>\n      </FilmInfo>\n    </SectionContainer>\n  );\n};\n\nFilmDetails.propTypes = {\n  film: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.array,\n  }),\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.div`\n  border-bottom: 2px solid #aeacac;\n  border-top: 2px solid #aeacac;\n`;\nexport const Title = styled.h3`\n  margin: 10px;\n`;\n\nexport const Li = styled.li`\n  list-style: circle;\n  color: black;\n  margin-left: 40px;\n  margin-bottom: 5px;\n`;\n\nexport const SuperLink = styled(Link)`\n  text-decoration: none;\n  text-transform: capitalize;\n  color: black;\n`;\n","import { SectionContainer } from 'components/Utils/SectionContainer';\nimport { Section, Li, SuperLink, Title } from './MoreInfoNavigation.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoreInfoNavigation = ({ id }) => {\n  return (\n    <Section>\n      <SectionContainer>\n        <Title>Дополнительная информация</Title>\n        <ul>\n          <Li>\n            <SuperLink to={`/movies/${id}/cast`}>Актерский состав</SuperLink>\n          </Li>\n          <Li>\n            <SuperLink to={`/movies/${id}/reviews`}>Отзывы</SuperLink>\n          </Li>\n        </ul>\n      </SectionContainer>\n    </Section>\n  );\n};\n\nMoreInfoNavigation.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n","import { Suspense, useRef } from 'react';\nimport { useParams, Outlet, Link, useLocation } from 'react-router-dom';\nimport { useFetchFilmInfo } from 'helpers/useFetchFilmInfo';\nimport { getPublicationsOneFilm } from 'service/FilmAPI';\nimport { FilmDetails } from 'components/FilmDetails/FilmDetails';\nimport { MoreInfoNavigation } from 'components/NavMoreInfo/MoreInfoNavigation';\nimport { Button, Spiner } from 'components/Utils';\n\nexport const MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const { data } = useFetchFilmInfo(getPublicationsOneFilm, movieId);\n  const location = useLocation();\n  const backToPage = useRef(location?.state?.from ?? '/');\n\n  return (\n    <>\n      <Button type=\"button\" styling={'margin: 3px 132px;'}>\n        <Link to={backToPage.current}>Назад</Link>\n      </Button>\n\n      {data && (\n        <>\n          <FilmDetails film={data} />\n          <MoreInfoNavigation id={movieId} />\n          <Suspense fallback={<Spiner />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\n\nexport const createApiConfiguration = (obj = {}) => {\n  return Object.entries(obj)\n    .map(type => type.join('='))\n    .join('&');\n};\n\ncreateApiConfiguration.propTypes = {\n  obj: PropTypes.object,\n};\n","import { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nexport const getErrorFromLength = (data, text, config) => {\n  if (data?.length === 0) {\n    toast.error(text, { config });\n  }\n};\n\ngetErrorFromLength.propType = {\n  data: PropTypes.object.isRequired,\n  text: PropTypes.string.isRequired,\n  config: PropTypes.object,\n};\n","import axios from 'axios';\nimport { createApiConfiguration } from 'helpers/createApiConfig';\nimport { getErrorFromLength } from 'helpers/getErrorFromLength';\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst DATA_FETCH = {\n  api_key: '7b5bc84100d595f56fff5f28d8089376',\n  language: 'ru',\n};\nconst textError =\n  'К сожалению, поиск по сайту не дал никаких результатов. Попробуйте изменить или сократить Ваш запрос.';\nconst config = createApiConfiguration(DATA_FETCH);\n\nexport const getPublication = async (\n  request,\n  { return: whatNeedReturn, error = false } = {}\n) => {\n  const response = await axios.get(request);\n  const data = whatNeedReturn\n    ? await response.data[whatNeedReturn]\n    : await response.data;\n\n  if (error) getErrorFromLength(data, textError);\n  return data;\n};\n\nexport const getPublicationsDay = () =>\n  getPublication(`/trending/movie/day?${config}`, { return: 'results' });\n\nexport const getPublicationsSearch = async value =>\n  value\n    ? getPublication(`/search/movie?query=${value}&${config}`, {\n        return: 'results',\n        error: true,\n      })\n    : undefined;\n\nexport const getPublicationsOneFilm = async id =>\n  getPublication(`movie/${id}?${config}`);\n\nexport const getActors = async id =>\n  getPublication(`movie/${id}/credits?${config}`, { return: 'cast' });\n\nexport const getRewiews = async id =>\n  getPublication(`movie/${id}/reviews?api_key=${DATA_FETCH.api_key}`, {\n    return: 'results',\n  });\n\ngetPublication.propType = {\n  request: PropTypes.func.isRequired,\n};\n"],"names":["Icon","styled","IoMdImages","prop","styling","StyledImage","Image","src","alt","SectionContainer","display","Btn","Button","type","onClick","text","icon","disabled","children","Wrapper","Spiner","color","Text","padding","Title","useFetchFilmInfo","functionForApi","useState","data","setData","status","setStatus","error","setError","useEffect","then","catch","finally","propTypes","PropTypes","FilmInfo","FilmDetails","film","poster_path","title","vote_average","overview","genres","percentageScore","map","name","join","Section","Li","SuperLink","Link","MoreInfoNavigation","id","S","to","MovieDetailsPage","movieId","useParams","getPublicationsOneFilm","location","useLocation","backToPage","useRef","state","from","current","Suspense","fallback","createApiConfiguration","obj","Object","entries","getErrorFromLength","config","length","toast","propType","axios","DATA_FETCH","api_key","language","textError","getPublication","request","whatNeedReturn","return","response","getPublicationsDay","getPublicationsSearch","value","undefined","getActors","getRewiews"],"sourceRoot":""}